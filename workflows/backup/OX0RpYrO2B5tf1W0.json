{
  "active": true,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "/": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tag?": {
      "main": [
        [
          {
            "node": "/",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          },
          {
            "node": "tag?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-13T11:27:04.770Z",
  "id": "OX0RpYrO2B5tf1W0",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "github 備份實驗",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -200,
        40
      ],
      "id": "9cdc177e-6314-4604-b048-9ed6cdecf927",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "get",
        "workflowId": {
          "__rl": true,
          "value": "JmnI5eXTJB70aVuO",
          "mode": "list",
          "cachedResultName": "網頁資訊提取入門-共學校 (#JmnI5eXTJB70aVuO)"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        0,
        180
      ],
      "id": "d40939bb-048d-4647-b6dd-871cdcdb990a",
      "name": "n8n",
      "credentials": {
        "n8nApi": {
          "id": "W41PrqEfM4WamItM",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 751,
        "width": 2547,
        "color": 6
      },
      "id": "84a943c6-a26f-4687-9d5e-92da7ce9d5ec",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "4b0eca42-cf1e-4b3d-9e99-1ac2c9836d2d",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        2800,
        600
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "a2ae5760-1908-4a00-a8e9-fbc860cb369a",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1900,
        480
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "f2ae64b3-6eda-4b44-a4e4-3f9015f44275",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        1700,
        500
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "85a8ee32-e5d9-4be4-a3bb-8282f2b1530f",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        1700,
        760
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
      },
      "id": "f26b7e75-d623-439a-a9bc-70a38d4f8aaf",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1900,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "4567a162-c88e-416d-9b0b-86f627848442",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        2120,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ad38df77-74e7-4258-81ba-5102a04947b0",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2340,
        600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "053e96ba-855a-4e61-a1d5-8b1a29be8a7e",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2340,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "50efeff5-74e1-4bc8-b99c-51b6c8cc5f2c",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        2340,
        920
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "89368ab4-71c9-4536-98d0-c700bb93fbac",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        2560,
        920
      ],
      "typeVersion": 1,
      "webhookId": "0634fb56-44fb-4015-898f-e83675c45f59",
      "credentials": {
        "githubApi": {
          "id": "0X05wI5bHtDL4JNm",
          "name": "GitHub account-021up"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "4aed8b7d-9796-4744-bfe1-86c40325bc75",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        2560,
        740
      ],
      "typeVersion": 1,
      "webhookId": "1ed26c4d-29e5-4236-aab8-25ab46166288",
      "credentials": {
        "githubApi": {
          "id": "0X05wI5bHtDL4JNm",
          "name": "GitHub account-021up"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ce836f48-1ec0-4740-9b1b-21e7cc251b40",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1360,
        120
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 12
            }
          ]
        }
      },
      "id": "f33b4855-8209-4126-bb40-a1a667486288",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        920,
        200
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \n\nFrom [this video](https://www.youtube.com/watch?v=NJMMBc9FM_w)\n\nThis workflow will backup all instance workflows to GitHub.\n\nThe files are saved `ID.json` for the filename.\n\n### Setup\nOpen `Globals` node and update the values below 👇\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - workflows/\n\n\nThe workflow calls itself using a subworkflow, to help reduce memory usage.",
        "height": 600.88409546716,
        "width": 371.1995072042308,
        "color": 4
      },
      "id": "669dfd86-c4bd-47d9-b186-8518e79ce429",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        -240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 434.88564057365943,
        "width": 886.4410237965205,
        "color": 7
      },
      "id": "4c6af43c-11c0-4333-aa4e-ceb061ad6929",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        860,
        -60
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "bb81de5a-4dbb-4dcc-b64e-406fd3d59f87",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        1500,
        500
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "4b103531-3d42-4c8f-9cc1-0ea6eddb375b",
      "credentials": {
        "githubApi": {
          "id": "0X05wI5bHtDL4JNm",
          "name": "GitHub account-021up"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "021up"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-learning"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "=workflows/{{ $json.tags[0].name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "40e3479e-25d8-4a51-a789-9244d52bd9b3",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        1280,
        660
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## Edit this node 👇",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "cd917358-2361-4c80-bfc0-e2b48caff547",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1260,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "50a3537b-5abe-4ec3-bd37-7b02f82d0dc5",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        560,
        840
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {},
          "schema": [],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "id": "c7933599-fd35-4507-b432-5ad9d9e5e6c0",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1580,
        100
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "12cad226-e091-4bbb-aed9-a8e01311772c",
              "name": "tags[0].name",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').item.json.tags[0].name }}/"
            }
          ]
        },
        "options": {}
      },
      "id": "f9fcc111-f159-4c63-ba11-df24fe3432d3",
      "name": "/",
      "type": "n8n-nodes-base.set",
      "position": [
        1040,
        560
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.tags[0] }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "tag"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "2656fbe3-fe35-4770-9c03-9a455ec618e4",
                    "operator": {
                      "type": "object",
                      "operation": "notExists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.tags[0] }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "none"
            }
          ]
        },
        "options": {}
      },
      "id": "96f32c18-15b1-4424-a412-aa678b880e27",
      "name": "tag?",
      "type": "n8n-nodes-base.switch",
      "position": [
        800,
        660
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "d6bdf48b-568e-4b90-a48f-56e58014587e",
      "name": "n8n1",
      "type": "n8n-nodes-base.n8n",
      "position": [
        1160,
        100
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "W41PrqEfM4WamItM",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "https://github.com/021up",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-learning",
          "mode": "list",
          "cachedResultName": "n8n-learning",
          "cachedResultUrl": "https://github.com/021up/n8n-learning"
        },
        "filePath": "共學校/HW_1.json",
        "fileContent": "={{$json.toJsonString()}}",
        "commitMessage": "=最後更新於 {{ $json.updatedAt }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        160,
        280
      ],
      "id": "fec757c9-4e16-41fb-81dc-a773f23464b5",
      "name": "GitHub",
      "webhookId": "43b8ff7d-a277-494d-8ff9-a57167f103c0",
      "credentials": {
        "githubApi": {
          "id": "0X05wI5bHtDL4JNm",
          "name": "GitHub account-021up"
        }
      }
    },
    {
      "parameters": {
        "content": "## 試驗\n",
        "height": 1200,
        "width": 680
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -280,
        -220
      ],
      "id": "c89983d9-319f-47ba-9e97-3018d7f7dcfb",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-05-14T03:45:10.115Z",
      "updatedAt": "2025-05-14T03:45:10.115Z",
      "id": "0BcNiths2jWCwlsU",
      "name": "backup"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-21T02:48:48.438Z",
  "versionId": "af7f1a0c-8df8-4aaa-acda-716b90a233ef"
}